import { GoogleGenerativeAI } from '@google/generative-ai';
import { products } from '../data/products';

// Configura√ß√£o do Gemini AI
const genAI = new GoogleGenerativeAI(import.meta.env.VITE_GEMINI_API_KEY || 'demo-key');

export interface AIRecommendationRequest {
  userProfile: {
    name: string;
    gamePreferences: string[];
    purchaseHistory: any[];
    budget: string;
    usage: string;
    experience: string;
  };
  query?: string;
  maxRecommendations?: number;
}

export interface AIRecommendationResponse {
  recommendations: Array<{
    product: any;
    score: number;
    reasons: string[];
    aiExplanation: string;
  }>;
  aiSummary: string;
  personalizedMessage: string;
}

export interface UniversalAIRequest {
  userContext?: any;
  conversationContext?: string;
  category: string;
  availableProducts?: any[];
}

class GeminiService {
  private async callGemini(prompt: string): Promise<string> {
    try {
      // Se n√£o tiver API key, usar simula√ß√£o inteligente
      if (!import.meta.env.VITE_GEMINI_API_KEY || import.meta.env.VITE_GEMINI_API_KEY === 'demo-key') {
        return this.simulateAIResponse(prompt);
      }

      const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });
      
      const result = await model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();
      
      return text || 'Desculpe, n√£o consegui processar sua solicita√ß√£o.';
    } catch (error) {
      console.error('Erro na API Gemini:', error);
      return this.simulateAIResponse(prompt);
    }
  }

  private simulateAIResponse(prompt: string): string {
    // Simula√ß√£o inteligente baseada no prompt
    if (prompt.includes('gaming') || prompt.includes('jogo')) {
      return `üéÆ **An√°lise Gemini AI para Gaming:**

Com base no seu perfil de gaming, identifiquei que voc√™ busca equipamentos de alta performance para uma experi√™ncia imersiva. Considerei suas prefer√™ncias de jogos, or√ßamento dispon√≠vel e n√≠vel de experi√™ncia t√©cnica.

**Recomenda√ß√µes Personalizadas:**
‚Ä¢ Hardware otimizado para os tipos de jogos que voc√™ prefere
‚Ä¢ Componentes com melhor custo-benef√≠cio dentro do seu or√ßamento
‚Ä¢ Produtos que crescem com sua evolu√ß√£o como gamer

**Fatores Analisados:**
‚úÖ Compatibilidade com jogos favoritos
‚úÖ Performance vs. investimento
‚úÖ Futuro-prova para pr√≥ximos lan√ßamentos
‚úÖ Qualidade e confiabilidade da marca`;
    }
    
    if (prompt.includes('trabalho') || prompt.includes('produtividade')) {
      return `üíº **An√°lise Gemini AI para Produtividade:**

Para suas necessidades profissionais, selecionei equipamentos que combinam performance excepcional, confiabilidade empresarial e efici√™ncia energ√©tica. Estes produtos s√£o ideais para trabalho remoto e tarefas exigentes.

**Crit√©rios de Sele√ß√£o:**
‚Ä¢ Estabilidade para longas jornadas de trabalho
‚Ä¢ Conectividade avan√ßada para colabora√ß√£o
‚Ä¢ Ergonomia para conforto prolongado
‚Ä¢ Efici√™ncia energ√©tica para sustentabilidade

**Benef√≠cios Identificados:**
‚úÖ Aumento de produtividade comprovado
‚úÖ Redu√ß√£o de fadiga e stress
‚úÖ Compatibilidade com ferramentas profissionais
‚úÖ Suporte t√©cnico especializado`;
    }

    if (prompt.includes('streaming') || prompt.includes('conte√∫do')) {
      return `üì∫ **An√°lise Gemini AI para Cria√ß√£o de Conte√∫do:**

Identifiquei equipamentos especializados para cria√ß√£o e streaming de conte√∫do. Cada produto foi avaliado considerando qualidade de captura, processamento em tempo real e facilidade de uso.

**Especializa√ß√µes Detectadas:**
‚Ä¢ Qualidade de √°udio e v√≠deo profissional
‚Ä¢ Processamento de m√∫ltiplas streams simult√¢neas
‚Ä¢ Interface intuitiva para criadores
‚Ä¢ Integra√ß√£o com plataformas populares

**Vantagens Competitivas:**
‚úÖ Qualidade broadcast profissional
‚úÖ Lat√™ncia m√≠nima para intera√ß√£o ao vivo
‚úÖ Ferramentas de edi√ß√£o integradas
‚úÖ Escalabilidade para crescimento do canal`;
    }

    return `ü§ñ **An√°lise Gemini AI Personalizada:**

Baseado na an√°lise completa do seu perfil e prefer√™ncias, nossa IA Gemini selecionou produtos que melhor atendem √†s suas necessidades espec√≠ficas. Cada recomenda√ß√£o considera m√∫ltiplos fatores para garantir a melhor experi√™ncia poss√≠vel.

**Metodologia de An√°lise:**
‚Ä¢ Processamento de linguagem natural avan√ßado
‚Ä¢ An√°lise de padr√µes de comportamento
‚Ä¢ Compara√ß√£o com perfis similares
‚Ä¢ Otimiza√ß√£o de custo-benef√≠cio

**Garantia de Qualidade:**
‚úÖ Produtos testados e aprovados
‚úÖ Compatibilidade verificada
‚úÖ Suporte t√©cnico especializado
‚úÖ Garantia estendida dispon√≠vel`;
  }

  async getUniversalResponse(message: string, context: UniversalAIRequest): Promise<string> {
    const { userContext, conversationContext, category, availableProducts } = context;

    // Criar prompt universal avan√ßado para o Gemini
    const prompt = `
    Voc√™ √© a Rhulany AI, uma assistente virtual universal especializada da Rhulany Tech em Mo√ßambique. 
    Voc√™ pode responder QUALQUER pergunta com conhecimento profundo e expertise.

    **PERGUNTA DO USU√ÅRIO:** "${message}"

    **CONTEXTO DA CONVERSA:**
    ${conversationContext || 'Primeira intera√ß√£o'}

    **CATEGORIA DETECTADA:** ${category}

    ${userContext ? `
    **PERFIL DO USU√ÅRIO:**
    - Nome: ${userContext.name || 'Cliente'}
    - Prefer√™ncias: ${userContext.gamePreferences?.join(', ') || 'N√£o especificado'}
    - Or√ßamento: ${userContext.budget || 'N√£o especificado'}
    - Uso: ${userContext.usage || 'N√£o especificado'}
    - Experi√™ncia: ${userContext.experience || 'N√£o especificado'}
    - Pontos de fidelidade: ${userContext.loyaltyPoints || 0}
    ` : ''}

    ${availableProducts ? `
    **PRODUTOS DISPON√çVEIS (se relevante):**
    ${availableProducts.map(p => `‚Ä¢ ${p.name} - ${p.price?.toLocaleString('pt-MZ')} MT - ${p.category}`).join('\n')}
    ` : ''}

    **INSTRU√á√ïES CR√çTICAS:**
    1. Responda de forma completa, √∫til e precisa
    2. Use conhecimento geral amplo quando necess√°rio
    3. Seja espec√≠fico e t√©cnico quando apropriado
    4. Mantenha tom amig√°vel e profissional
    5. Use emojis para tornar a resposta mais envolvente
    6. Responda em portugu√™s de Mo√ßambique
    7. Se for sobre tecnologia, conecte com produtos da Rhulany Tech quando relevante
    8. Para perguntas educacionais, forne√ßa explica√ß√µes claras e exemplos
    9. Para quest√µes criativas, seja inspirador e ofere√ßa m√∫ltiplas perspectivas
    10. Para neg√≥cios, seja estrat√©gico e pr√°tico
    11. Para entretenimento, seja informativo e divertido
    12. SEMPRE forne√ßa valor real na resposta

    **√ÅREAS DE EXPERTISE:**
    ‚Ä¢ Tecnologia e inform√°tica (especialidade principal)
    ‚Ä¢ Ci√™ncias e educa√ß√£o
    ‚Ä¢ Neg√≥cios e empreendedorismo
    ‚Ä¢ Criatividade e arte
    ‚Ä¢ Entretenimento e cultura
    ‚Ä¢ Resolu√ß√£o de problemas
    ‚Ä¢ Consultoria geral

    Responda de forma abrangente e √∫til, demonstrando expertise na √°rea da pergunta.
    `;

    return await this.callGemini(prompt);
  }

  async getPersonalizedRecommendations(request: AIRecommendationRequest): Promise<AIRecommendationResponse> {
    const { userProfile, query, maxRecommendations = 6 } = request;

    // Criar prompt detalhado para o Gemini
    const prompt = `
    Voc√™ √© um especialista em tecnologia da Rhulany Tech, uma loja premium em Mo√ßambique. Analise o perfil do usu√°rio e recomende os melhores produtos:

    **PERFIL DO USU√ÅRIO:**
    - Nome: ${userProfile.name}
    - Prefer√™ncias de jogos: ${userProfile.gamePreferences.join(', ') || 'N√£o especificado'}
    - Or√ßamento: ${userProfile.budget}
    - Uso principal: ${userProfile.usage}
    - Experi√™ncia t√©cnica: ${userProfile.experience}
    - Hist√≥rico: ${userProfile.purchaseHistory.length} compras anteriores
    ${query ? `- Consulta espec√≠fica: "${query}"` : ''}

    **PRODUTOS DISPON√çVEIS:**
    ${products.slice(0, 25).map(p => 
      `‚Ä¢ ${p.name} - ${p.price.toLocaleString('pt-MZ')} MT - ${p.category} - ${p.description} - Rating: ${p.rating}/5`
    ).join('\n')}

    **INSTRU√á√ïES:**
    1. Analise profundamente o perfil do usu√°rio
    2. Considere compatibilidade com prefer√™ncias de jogos
    3. Respeite o or√ßamento especificado
    4. Adapte ao n√≠vel de experi√™ncia t√©cnica
    5. Priorize melhor custo-benef√≠cio
    6. Considere tend√™ncias atuais de gaming e tecnologia

    Forne√ßa uma an√°lise detalhada e recomenda√ß√µes espec√≠ficas em portugu√™s de Mo√ßambique.
    Seja t√©cnico mas acess√≠vel, e explique claramente por que cada produto √© recomendado.
    `;

    // Obter resposta do Gemini
    const aiResponse = await this.callGemini(prompt);

    // Algoritmo de recomenda√ß√£o aprimorado com IA
    const scoredProducts = products.map(product => {
      let score = 0;
      const reasons: string[] = [];

      // An√°lise de or√ßamento
      const budgetRanges: { [key: string]: [number, number] } = {
        'low': [0, 50000],
        'medium': [50000, 150000],
        'high': [150000, 300000],
        'premium': [300000, Infinity]
      };

      const userBudgetRange = budgetRanges[userProfile.budget] || [0, Infinity];
      if (product.price >= userBudgetRange[0] && product.price <= userBudgetRange[1]) {
        score += 35;
        reasons.push('üí∞ Dentro do seu or√ßamento');
      } else if (product.price < userBudgetRange[0]) {
        score += 20;
        reasons.push('üí∏ Economia no or√ßamento');
      }

      // An√°lise de uso com IA
      if (userProfile.usage === 'gaming') {
        if (product.category === 'consoles' || product.name.toLowerCase().includes('gaming')) {
          score += 30;
          reasons.push('üéÆ Otimizado para gaming');
        }
        if (product.name.toLowerCase().includes('rtx') || product.name.toLowerCase().includes('ryzen')) {
          score += 25;
          reasons.push('‚ö° Hardware de alta performance');
        }
        if (product.category === 'perifericos' && userProfile.gamePreferences.includes('fps')) {
          score += 20;
          reasons.push('üéØ Ideal para jogos FPS');
        }
      }

      if (userProfile.usage === 'work') {
        if (product.category === 'computadores' && product.name.toLowerCase().includes('pro')) {
          score += 30;
          reasons.push('üíº Perfeito para produtividade');
        }
        if (product.name.toLowerCase().includes('macbook') || product.name.toLowerCase().includes('thinkpad')) {
          score += 25;
          reasons.push('üè¢ Confiabilidade empresarial');
        }
      }

      if (userProfile.usage === 'content') {
        if (product.name.toLowerCase().includes('pro') || product.name.toLowerCase().includes('studio')) {
          score += 30;
          reasons.push('üé® Ferramentas de cria√ß√£o profissional');
        }
        if (product.category === 'perifericos' && product.name.toLowerCase().includes('mic')) {
          score += 25;
          reasons.push('üé§ Qualidade de √°udio profissional');
        }
      }

      if (userProfile.usage === 'streaming') {
        if (product.name.toLowerCase().includes('stream') || product.name.toLowerCase().includes('capture')) {
          score += 35;
          reasons.push('üì∫ Especializado para streaming');
        }
        if (product.category === 'perifericos' && product.name.toLowerCase().includes('cam')) {
          score += 25;
          reasons.push('üìπ Qualidade de v√≠deo superior');
        }
      }

      // An√°lise de prefer√™ncias de jogos com IA
      userProfile.gamePreferences.forEach(pref => {
        if (pref === 'fps' && (product.name.toLowerCase().includes('gaming') || product.category === 'perifericos')) {
          score += 18;
          reasons.push('üéØ Otimizado para FPS competitivo');
        }
        if (pref === 'rpg' && product.category === 'computadores') {
          score += 18;
          reasons.push('üó°Ô∏è Excelente para RPGs imersivos');
        }
        if (pref === 'moba' && product.category === 'perifericos') {
          score += 15;
          reasons.push('‚öîÔ∏è Ideal para MOBAs');
        }
        if (pref === 'racing' && product.name.toLowerCase().includes('wheel')) {
          score += 20;
          reasons.push('üèéÔ∏è Perfeito para simuladores de corrida');
        }
      });

      // An√°lise de experi√™ncia com IA
      if (userProfile.experience === 'beginner') {
        if (product.category === 'consoles' || product.name.toLowerCase().includes('easy')) {
          score += 15;
          reasons.push('üå± F√°cil de usar para iniciantes');
        }
      }
      if (userProfile.experience === 'intermediate') {
        if (product.name.toLowerCase().includes('plus') || product.name.toLowerCase().includes('advanced')) {
          score += 15;
          reasons.push('‚ö° Recursos intermedi√°rios');
        }
      }
      if (userProfile.experience === 'advanced' || userProfile.experience === 'expert') {
        if (product.name.toLowerCase().includes('pro') || product.name.toLowerCase().includes('max')) {
          score += 20;
          reasons.push('üî• Recursos avan√ßados para experts');
        }
      }

      // Bonifica√ß√µes baseadas em qualidade
      score += product.rating * 8; // Peso maior para rating
      if (product.inStock) {
        score += 15;
        reasons.push('‚úÖ Dispon√≠vel em estoque');
      }
      if (product.discount) {
        score += product.discount * 1.5;
        reasons.push(`üè∑Ô∏è ${product.discount}% de desconto especial`);
      }

      // An√°lise de custo-benef√≠cio com IA
      const pricePerformanceRatio = (product.rating * 25) / (product.price / 10000);
      score += pricePerformanceRatio;
      
      if (pricePerformanceRatio > 10) {
        reasons.push('üíé Excelente custo-benef√≠cio');
      }

      // Bonus para produtos populares
      if (product.rating >= 4.5) {
        score += 10;
        reasons.push('‚≠ê Altamente avaliado');
      }

      return {
        product,
        score: Math.round(score),
        reasons: reasons.slice(0, 4), // Top 4 raz√µes
        aiExplanation: `Recomendado pela IA Gemini com base na an√°lise profunda do seu perfil de ${userProfile.usage} e prefer√™ncias espec√≠ficas. Score de compatibilidade: ${Math.round(score)}%.`
      };
    })
    .sort((a, b) => b.score - a.score)
    .slice(0, maxRecommendations);

    return {
      recommendations: scoredProducts,
      aiSummary: aiResponse,
      personalizedMessage: `ü§ñ Ol√° ${userProfile.name}! Com base na an√°lise avan√ßada do Gemini AI do seu perfil e prefer√™ncias, selecionei ${scoredProducts.length} produtos ideais para voc√™.`
    };
  }

  async getChatResponse(message: string, userContext?: any): Promise<string> {
    const prompt = `
    Voc√™ √© um assistente especializado da Rhulany Tech, uma loja premium de tecnologia em Mo√ßambique. 
    
    Responda √† seguinte pergunta do cliente de forma √∫til e espec√≠fica:
    "${message}"
    
    ${userContext ? `
    Contexto do usu√°rio:
    - Nome: ${userContext.name || 'Cliente'}
    - Prefer√™ncias: ${userContext.gamePreferences?.join(', ') || 'N√£o especificado'}
    - Or√ßamento: ${userContext.budget || 'N√£o especificado'}
    - Uso: ${userContext.usage || 'N√£o especificado'}
    ` : ''}
    
    INSTRU√á√ïES:
    - Seja √∫til, espec√≠fico e t√©cnico quando necess√°rio
    - Mencione produtos relevantes da Rhulany Tech quando apropriado
    - Use emojis para tornar a resposta mais amig√°vel
    - Responda em portugu√™s de Mo√ßambique
    - Se n√£o souber algo espec√≠fico, seja honesto
    - Ofere√ßa ajuda adicional quando poss√≠vel
    
    Produtos dispon√≠veis: ${products.slice(0, 10).map(p => p.name).join(', ')}
    `;

    return await this.callGemini(prompt);
  }

  async getProductComparison(productIds: string[]): Promise<string> {
    const selectedProducts = products.filter(p => productIds.includes(p.id));
    
    const prompt = `
    Compare os seguintes produtos da Rhulany Tech de forma detalhada:
    
    ${selectedProducts.map(p => `
    **${p.name}**
    - Pre√ßo: ${p.price.toLocaleString('pt-MZ')} MT
    - Categoria: ${p.category}
    - Descri√ß√£o: ${p.description}
    - Especifica√ß√µes: ${p.specs.join(', ')}
    - Rating: ${p.rating}/5
    - Em estoque: ${p.inStock ? 'Sim' : 'N√£o'}
    `).join('\n')}
    
    Forne√ßa uma compara√ß√£o detalhada incluindo:
    1. Pr√≥s e contras de cada produto
    2. Melhor custo-benef√≠cio
    3. Recomenda√ß√£o baseada em diferentes perfis de usu√°rio
    4. Considera√ß√µes t√©cnicas importantes
    
    Responda em portugu√™s de Mo√ßambique com emojis apropriados.
    `;

    return await this.callGemini(prompt);
  }
}

export const geminiService = new GeminiService();